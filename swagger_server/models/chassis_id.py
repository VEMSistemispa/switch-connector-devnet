# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  

from typing import List, Dict  

from swagger_server.models.base_model_ import Model
from swagger_server.models.mac_address import MACAddress  
import re  
from swagger_server import util


class ChassisId(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, chassis_id: MACAddress=None):  
        """ChassisId - a model defined in Swagger

        :param chassis_id: The chassis_id of this ChassisId.  
        :type chassis_id: MACAddress
        """
        self.swagger_types = {
            'chassis_id': MACAddress
        }

        self.attribute_map = {
            'chassis_id': 'chassis_id'
        }
        self._chassis_id = chassis_id

    @classmethod
    def from_dict(cls, dikt) -> 'ChassisId':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ChassisId of this ChassisId.  
        :rtype: ChassisId
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chassis_id(self) -> MACAddress:
        """Gets the chassis_id of this ChassisId.


        :return: The chassis_id of this ChassisId.
        :rtype: MACAddress
        """
        return self._chassis_id

    @chassis_id.setter
    def chassis_id(self, chassis_id: MACAddress):
        """Sets the chassis_id of this ChassisId.


        :param chassis_id: The chassis_id of this ChassisId.
        :type chassis_id: MACAddress
        """
        if chassis_id is None:
            raise ValueError("Invalid value for `chassis_id`, must not be `None`")  

        self._chassis_id = chassis_id
